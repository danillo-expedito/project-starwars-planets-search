{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-01T21:06:23.841Z",
    "end": "2023-06-01T21:06:25.917Z",
    "duration": 2076,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c1a23056-5191-48bd-bc09-f362803533e5",
      "title": "",
      "fullFile": "cypress/e2e/02.filterByName.cy.js",
      "file": "cypress/e2e/02.filterByName.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c7230c5-af84-4ea2-b2fe-5a313cfbc468",
          "title": "2 - Crie um filtro de texto para a tabela",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Filtre os planetas que possuem a letra \"o\" no nome",
              "fullTitle": "2 - Crie um filtro de texto para a tabela Filtre os planetas que possuem a letra \"o\" no nome",
              "timedOut": null,
              "duration": 483,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).type('o');\ncy.get('table tr').should('have.length', ROWS_WITH_LETTER_O);\nconst planetNames = ['Coruscant', 'Dagobah', 'Endor', 'Hoth', 'Kamino', 'Naboo', 'Tatooine'];\nplanetNames.forEach(planet => {\n  cy.contains(planet);\n});",
              "err": {},
              "uuid": "e0ef457d-ed34-499a-9ed6-1547f6792066",
              "parentUUID": "0c7230c5-af84-4ea2-b2fe-5a313cfbc468",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filtre planetas que possuem a letra \"oo\" no nome",
              "fullTitle": "2 - Crie um filtro de texto para a tabela Filtre planetas que possuem a letra \"oo\" no nome",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).type('oo');\ncy.get('table tr').should('have.length', ROWS_WITH_LETTER_OO);\ncy.contains('Naboo');\ncy.contains('Tatooine');",
              "err": {},
              "uuid": "4e8988f0-71a9-450a-a835-1a0c726de83c",
              "parentUUID": "0c7230c5-af84-4ea2-b2fe-5a313cfbc468",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Faça vários filtros em sequência",
              "fullTitle": "2 - Crie um filtro de texto para a tabela Faça vários filtros em sequência",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).type('o');\ncy.get('table tr').should('have.length', ROWS_WITH_LETTER_O);\nconst planetNames = ['Coruscant', 'Dagobah', 'Endor', 'Hoth', 'Kamino', 'Naboo', 'Tatooine'];\nplanetNames.forEach(planet => {\n  cy.contains(planet);\n});\ncy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).type('o');\ncy.get('table tr').should('have.length', ROWS_WITH_LETTER_OO);\ncy.contains('Naboo');\ncy.contains('Tatooine');\ncy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).clear();\ncy.get('table tr').should('have.length', ROWS_TOTAL);\nplanets.forEach(({\n  name\n}) => {\n  cy.contains(name);\n});",
              "err": {},
              "uuid": "b9658d85-b61c-4137-bbd9-1bc025c62e85",
              "parentUUID": "0c7230c5-af84-4ea2-b2fe-5a313cfbc468",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0ef457d-ed34-499a-9ed6-1547f6792066",
            "4e8988f0-71a9-450a-a835-1a0c726de83c",
            "b9658d85-b61c-4137-bbd9-1bc025c62e85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1198,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}