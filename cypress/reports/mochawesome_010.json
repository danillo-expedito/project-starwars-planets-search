{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-05-31T22:37:06.564Z",
    "end": "2023-05-31T22:37:07.807Z",
    "duration": 1243,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "694e2803-ddc6-40f3-a506-632cb59f846c",
      "title": "",
      "fullFile": "cypress/e2e/01.starwarsApi.cy.js",
      "file": "cypress/e2e/01.starwarsApi.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d8d5857-4385-43b2-9641-189cf3d3e65a",
          "title": "1 - Faça uma requisição para o endpoint `/planets` da API de Star Wars e preencha uma tabela com os dados retornados, com exceção dos da coluna `residents`",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Realize uma requisição para a API",
              "fullTitle": "1 - Faça uma requisição para o endpoint `/planets` da API de Star Wars e preencha uma tabela com os dados retornados, com exceção dos da coluna `residents` Realize uma requisição para a API",
              "timedOut": null,
              "duration": 312,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('@mockFetch').should('be.called');",
              "err": {
                "message": "TypeError: The following error originated from your application code, not from Cypress.\n\n  > movies.map is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `1 - Faça uma requisição par...`",
                "estack": "TypeError: The following error originated from your application code, not from Cypress.\n\n  > movies.map is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `1 - Faça uma requisição par...`\n    at Home (http://localhost:3000/static/js/bundle.js:666:24)\n    at renderWithHooks (http://localhost:3000/static/js/bundle.js:24278:22)\n    at updateFunctionComponent (http://localhost:3000/static/js/bundle.js:27160:24)\n    at beginWork (http://localhost:3000/static/js/bundle.js:28872:20)\n    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:13870:18)\n    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:13914:20)\n    at invokeGuardedCallback (http://localhost:3000/static/js/bundle.js:13971:35)\n    at beginWork$1 (http://localhost:3000/static/js/bundle.js:33845:11)\n    at performUnitOfWork (http://localhost:3000/static/js/bundle.js:33092:16)\n    at workLoopSync (http://localhost:3000/static/js/bundle.js:33015:9)",
                "diff": null
              },
              "uuid": "19ee4027-75eb-4a76-b455-cbc607caf9b5",
              "parentUUID": "1d8d5857-4385-43b2-9641-189cf3d3e65a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Preencha a tabela com os dados retornados",
              "fullTitle": "1 - Faça uma requisição para o endpoint `/planets` da API de Star Wars e preencha uma tabela com os dados retornados, com exceção dos da coluna `residents` Preencha a tabela com os dados retornados",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "planets.forEach(planet => {\n  cy.contains(planet.name);\n  cy.contains(planet.rotation_period);\n  cy.contains(planet.orbital_period);\n  cy.contains(planet.diameter);\n  cy.contains(planet.climate);\n  cy.contains(planet.gravity);\n  cy.contains(planet.terrain);\n  cy.contains(planet.surface_water);\n  cy.contains(planet.population);\n});",
              "err": {},
              "uuid": "e1b2631d-6b41-4e5d-a7e3-23a1fbe41a9e",
              "parentUUID": "1d8d5857-4385-43b2-9641-189cf3d3e65a",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifique se a tabela tem 13 colunas",
              "fullTitle": "1 - Faça uma requisição para o endpoint `/planets` da API de Star Wars e preencha uma tabela com os dados retornados, com exceção dos da coluna `residents` Verifique se a tabela tem 13 colunas",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// a requisição (mock) retorna 14 chaves em cada planeta, mas a chave `residents` não deve ser exibida totalizando 13 colunas\ncy.get('table tr:first th').should('have.length', MAX_COLUMNS_COUNT);",
              "err": {},
              "uuid": "1a5ab079-8dea-4d35-91eb-4108c6573c6e",
              "parentUUID": "1d8d5857-4385-43b2-9641-189cf3d3e65a",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifique se a tabela tem uma linha para cada planeta retornado",
              "fullTitle": "1 - Faça uma requisição para o endpoint `/planets` da API de Star Wars e preencha uma tabela com os dados retornados, com exceção dos da coluna `residents` Verifique se a tabela tem uma linha para cada planeta retornado",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// a requisição (mock) retorna 10 planetas, somando com mais um linha do header totalizando 11 linhas\ncy.get('table tr').should('have.length', planets.length + 1);",
              "err": {},
              "uuid": "c50a0f76-72ed-4c0d-b51c-bc50e6397ee4",
              "parentUUID": "1d8d5857-4385-43b2-9641-189cf3d3e65a",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "19ee4027-75eb-4a76-b455-cbc607caf9b5"
          ],
          "pending": [],
          "skipped": [
            "e1b2631d-6b41-4e5d-a7e3-23a1fbe41a9e",
            "1a5ab079-8dea-4d35-91eb-4108c6573c6e",
            "c50a0f76-72ed-4c0d-b51c-bc50e6397ee4"
          ],
          "duration": 312,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}