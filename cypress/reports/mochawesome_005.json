{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 0,
    "pending": 0,
    "failures": 5,
    "start": "2023-05-31T22:32:01.974Z",
    "end": "2023-05-31T22:32:43.373Z",
    "duration": 41399,
    "testsRegistered": 5,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6a6abd47-9f67-4cff-8c0d-ea5a3801ba39",
      "title": "",
      "fullFile": "cypress/e2e/06.repeatedFilters.cy.js",
      "file": "cypress/e2e/06.repeatedFilters.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Filtre por diâmetro e o remove das opções",
          "fullTitle": "Filtre por diâmetro e o remove das opções",
          "timedOut": null,
          "duration": 10018,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "const allColumnsOptions = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length);\n  allColumnsOptions.forEach(option => {\n    expect(options).to.contain(option);\n  });\n});\ncy.addFilter('diameter', 'maior que', '12240');\ncy.get('table tr').should('have.length', FILTERED_ROWS_COUNT_DIAMETER);\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length - 1);\n  expect(options).to.not.contain('diameter');\n});",
          "err": {
            "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-filter\"]`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-filter\"]`, but never found it.\n    at Context.eval (webpack:///./cypress/support/commands.js:34:62)",
            "diff": null
          },
          "uuid": "ba933f08-bbd5-4b40-ac54-1f385c6f0a4f",
          "parentUUID": "6a6abd47-9f67-4cff-8c0d-ea5a3801ba39",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Filtre por período de rotação e o remove das opções",
          "fullTitle": "Filtre por período de rotação e o remove das opções",
          "timedOut": null,
          "duration": 10009,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "const allColumnsOptions = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length);\n  allColumnsOptions.forEach(option => {\n    expect(options).to.contain(option);\n  });\n});\ncy.addFilter('rotation_period', 'maior que', '25');\ncy.get('table tr').should('have.length', FILTERED_ROWS_COUNT_ROTATION_PERIOD);\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length - 1);\n  expect(options).to.not.contain('rotation_period');\n});",
          "err": {
            "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-filter\"]`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-filter\"]`, but never found it.\n    at Context.eval (webpack:///./cypress/support/commands.js:34:62)",
            "diff": null
          },
          "uuid": "8c6e8573-caeb-4c0c-9af2-47544b90c2ef",
          "parentUUID": "6a6abd47-9f67-4cff-8c0d-ea5a3801ba39",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Filtre por período de órbita e o remove das opções",
          "fullTitle": "Filtre por período de órbita e o remove das opções",
          "timedOut": null,
          "duration": 10015,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "const allColumnsOptions = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length);\n  allColumnsOptions.forEach(option => {\n    expect(options).to.contain(option);\n  });\n});\ncy.addFilter('orbital_period', 'maior que', '350');\ncy.get('table tr').should('have.length', FILTERED_ROWS_COUNT_ORBITAL_PERIOD);\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length - 1);\n  expect(options).to.not.contain('orbital_period');\n});",
          "err": {
            "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-filter\"]`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-filter\"]`, but never found it.\n    at Context.eval (webpack:///./cypress/support/commands.js:34:62)",
            "diff": null
          },
          "uuid": "0aa03947-39e0-4d67-a700-7de162a04231",
          "parentUUID": "6a6abd47-9f67-4cff-8c0d-ea5a3801ba39",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Filtre por superfície aquática e o remove das opções",
          "fullTitle": "Filtre por superfície aquática e o remove das opções",
          "timedOut": null,
          "duration": 10021,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "const allColumnsOptions = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length);\n  allColumnsOptions.forEach(option => {\n    expect(options).to.contain(option);\n  });\n});\ncy.addFilter('surface_water', 'maior que', '99');\ncy.get('table tr').should('have.length', FILTERED_ROWS_COUNT_SURFACE_WATER);\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length - 1);\n  expect(options).to.not.contain('surface_water');\n});",
          "err": {
            "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-filter\"]`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"column-filter\"]`, but never found it.\n    at Context.eval (webpack:///./cypress/support/commands.js:34:62)",
            "diff": null
          },
          "uuid": "516ba46e-1f60-458b-b79e-09132b17a104",
          "parentUUID": "6a6abd47-9f67-4cff-8c0d-ea5a3801ba39",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [
        {
          "uuid": "636f5d0e-f099-4581-95b1-91d1067150ea",
          "title": "6 - Não utilize filtros repetidos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Filtre por população e o remove das opções",
              "fullTitle": "6 - Não utilize filtros repetidos Filtre por população e o remove das opções",
              "timedOut": null,
              "duration": 319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const allColumnsOptions = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length);\n  allColumnsOptions.forEach(option => {\n    expect(options).to.contain(option);\n  });\n});\ncy.addFilter('population', 'maior que', '8000');\ncy.get('table tr').should('have.length', FILTERED_ROWS_COUNT_POPULATION);\ncy.getByTestId(_dataTestIds.COLUMN_FILTER).find('option').should(options => {\n  expect(options).to.have.length(allColumnsOptions.length - 1);\n  expect(options).to.not.contain('population');\n});",
              "err": {
                "message": "TypeError: The following error originated from your application code, not from Cypress.\n\n  > movies.map is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `6 - Não utilize filtros rep...`",
                "estack": "TypeError: The following error originated from your application code, not from Cypress.\n\n  > movies.map is not a function\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `6 - Não utilize filtros rep...`\n    at Home (http://localhost:3000/static/js/bundle.js:666:24)\n    at renderWithHooks (http://localhost:3000/static/js/bundle.js:24278:22)\n    at updateFunctionComponent (http://localhost:3000/static/js/bundle.js:27160:24)\n    at beginWork (http://localhost:3000/static/js/bundle.js:28872:20)\n    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:13870:18)\n    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:13914:20)\n    at invokeGuardedCallback (http://localhost:3000/static/js/bundle.js:13971:35)\n    at beginWork$1 (http://localhost:3000/static/js/bundle.js:33845:11)\n    at performUnitOfWork (http://localhost:3000/static/js/bundle.js:33092:16)\n    at workLoopSync (http://localhost:3000/static/js/bundle.js:33015:9)",
                "diff": null
              },
              "uuid": "36485f40-5b37-401c-a7ab-2acd3ec8036d",
              "parentUUID": "636f5d0e-f099-4581-95b1-91d1067150ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "36485f40-5b37-401c-a7ab-2acd3ec8036d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [
        "ba933f08-bbd5-4b40-ac54-1f385c6f0a4f",
        "8c6e8573-caeb-4c0c-9af2-47544b90c2ef",
        "0aa03947-39e0-4d67-a700-7de162a04231",
        "516ba46e-1f60-458b-b79e-09132b17a104"
      ],
      "pending": [],
      "skipped": [],
      "duration": 40063,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}