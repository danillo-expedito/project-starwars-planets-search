{"ast":null,"code":"var _jsxFileName = \"/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/sortProvider.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport SortContext from './sortContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SortProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [sort, setSort] = useState({\n    order: {\n      column: '',\n      sort: ''\n    }\n  });\n  const [sortOption, setSortOption] = useState('population');\n  const [radio, setRadio] = useState('');\n  const sub = -1;\n  function SortBy(planetA, planetB) {\n    if (!sort.order.column || !sort.order.sort) {\n      return true;\n    }\n    switch (sort.order.sort) {\n      case 'ASC':\n        if (planetA[sort.order.column] === 'unknown') {\n          return 1;\n        }\n        if (planetB[sort.order.column] === 'unknown') {\n          return sub;\n        }\n        return planetA[sort.order.column] - planetB[sort.order.column];\n      case 'DESC':\n        if (planetA[sort.order.column] === 'unknown') {\n          return 1;\n        }\n        if (planetB[sort.order.column] === 'unknown') {\n          return sub;\n        }\n        return planetB[sort.order.column] - planetA[sort.order.column];\n      default:\n        break;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(SortContext.Provider, {\n    value: {\n      sort,\n      sortOption,\n      setSortOption,\n      radio,\n      setRadio,\n      setSort,\n      SortBy\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(SortProvider, \"VZ8j0UlW/a2EB0+IASAQ9F/a7BA=\");\n_c = SortProvider;\nSortProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};\nexport default SortProvider;\nvar _c;\n$RefreshReg$(_c, \"SortProvider\");","map":{"version":3,"names":["PropTypes","useState","SortContext","SortProvider","children","sort","setSort","order","column","sortOption","setSortOption","radio","setRadio","sub","SortBy","planetA","planetB","propTypes","element","isRequired"],"sources":["/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/sortProvider.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport SortContext from './sortContext';\n\nfunction SortProvider({ children }) {\n  const [sort, setSort] = useState({\n    order: {\n      column: '',\n      sort: '',\n    },\n  });\n\n  const [sortOption, setSortOption] = useState('population');\n  const [radio, setRadio] = useState('');\n\n  const sub = -1;\n\n  function SortBy(planetA, planetB) {\n    if (!sort.order.column || !sort.order.sort) {\n      return true;\n    }\n    switch (sort.order.sort) {\n    case 'ASC':\n      if (planetA[sort.order.column] === 'unknown') {\n        return 1;\n      } if (planetB[sort.order.column] === 'unknown') {\n        return sub;\n      }\n      return planetA[sort.order.column] - planetB[sort.order.column];\n    case 'DESC':\n      if (planetA[sort.order.column] === 'unknown') {\n        return 1;\n      } if (planetB[sort.order.column] === 'unknown') {\n        return sub;\n      }\n      return planetB[sort.order.column] - planetA[sort.order.column];\n    default:\n      break;\n    }\n  }\n\n  return (\n    <SortContext.Provider\n      value={\n        { sort,\n          sortOption,\n          setSortOption,\n          radio,\n          setRadio,\n          setSort,\n          SortBy }\n      }\n    >\n      {children}\n    </SortContext.Provider>\n  );\n}\n\nSortProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default SortProvider;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,SAASC,YAAY,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC;IAC/BM,KAAK,EAAE;MACLC,MAAM,EAAE,EAAE;MACVH,IAAI,EAAE;IACR;EACF,CAAC,CAAC;EAEF,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,YAAY,CAAC;EAC1D,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,GAAG,GAAG,CAAC,CAAC;EAEd,SAASC,MAAM,CAACC,OAAO,EAAEC,OAAO,EAAE;IAChC,IAAI,CAACX,IAAI,CAACE,KAAK,CAACC,MAAM,IAAI,CAACH,IAAI,CAACE,KAAK,CAACF,IAAI,EAAE;MAC1C,OAAO,IAAI;IACb;IACA,QAAQA,IAAI,CAACE,KAAK,CAACF,IAAI;MACvB,KAAK,KAAK;QACR,IAAIU,OAAO,CAACV,IAAI,CAACE,KAAK,CAACC,MAAM,CAAC,KAAK,SAAS,EAAE;UAC5C,OAAO,CAAC;QACV;QAAE,IAAIQ,OAAO,CAACX,IAAI,CAACE,KAAK,CAACC,MAAM,CAAC,KAAK,SAAS,EAAE;UAC9C,OAAOK,GAAG;QACZ;QACA,OAAOE,OAAO,CAACV,IAAI,CAACE,KAAK,CAACC,MAAM,CAAC,GAAGQ,OAAO,CAACX,IAAI,CAACE,KAAK,CAACC,MAAM,CAAC;MAChE,KAAK,MAAM;QACT,IAAIO,OAAO,CAACV,IAAI,CAACE,KAAK,CAACC,MAAM,CAAC,KAAK,SAAS,EAAE;UAC5C,OAAO,CAAC;QACV;QAAE,IAAIQ,OAAO,CAACX,IAAI,CAACE,KAAK,CAACC,MAAM,CAAC,KAAK,SAAS,EAAE;UAC9C,OAAOK,GAAG;QACZ;QACA,OAAOG,OAAO,CAACX,IAAI,CAACE,KAAK,CAACC,MAAM,CAAC,GAAGO,OAAO,CAACV,IAAI,CAACE,KAAK,CAACC,MAAM,CAAC;MAChE;QACE;IAAM;EAEV;EAEA,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EACH;MAAEH,IAAI;MACJI,UAAU;MACVC,aAAa;MACbC,KAAK;MACLC,QAAQ;MACRN,OAAO;MACPQ;IAAO,CACV;IAAA,UAEAV;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B;AAAC,GApDQD,YAAY;AAAA,KAAZA,YAAY;AAsDrBA,YAAY,CAACc,SAAS,GAAG;EACvBb,QAAQ,EAAEJ,SAAS,CAACkB,OAAO,CAACC;AAC9B,CAAC;AAED,eAAehB,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}