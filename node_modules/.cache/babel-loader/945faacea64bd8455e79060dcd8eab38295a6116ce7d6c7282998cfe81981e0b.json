{"ast":null,"code":"import{useContext}from'react';import useFetch from'../hooks/useFetch';import FormContext from'../context/formContext';import FilterContext from'../context/filterContext';import SortContext from'../context/sortContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Table(){var _useFetch=useFetch(),DATA=_useFetch.DATA;var _useContext=useContext(FormContext),search=_useContext.search;var _useContext2=useContext(FilterContext),HandleFilterCases=_useContext2.HandleFilterCases;var _useContext3=useContext(SortContext),SortBy=_useContext3.SortBy;return/*#__PURE__*/_jsx(\"div\",{children:DATA.length?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(DATA[0]).map(function(objKey,index){return/*#__PURE__*/_jsx(\"th\",{children:objKey},index);})})}),/*#__PURE__*/_jsx(\"tbody\",{children:DATA.filter(function(planet){return planet.name.toLowerCase().includes(search);}).filter(HandleFilterCases).sort(function(a,b){return SortBy(a,b);}).map(function(planet,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{\"data-testid\":\"planet-name\",children:planet.name}),/*#__PURE__*/_jsx(\"td\",{children:planet.rotation_period}),/*#__PURE__*/_jsx(\"td\",{children:planet.orbital_period}),/*#__PURE__*/_jsx(\"td\",{children:planet.diameter}),/*#__PURE__*/_jsx(\"td\",{children:planet.climate}),/*#__PURE__*/_jsx(\"td\",{children:planet.gravity}),/*#__PURE__*/_jsx(\"td\",{children:planet.terrain}),/*#__PURE__*/_jsx(\"td\",{children:planet.surface_water}),/*#__PURE__*/_jsx(\"td\",{children:planet.population}),/*#__PURE__*/_jsx(\"td\",{children:planet.films}),/*#__PURE__*/_jsx(\"td\",{children:planet.created}),/*#__PURE__*/_jsx(\"td\",{children:planet.edited}),/*#__PURE__*/_jsx(\"td\",{children:planet.url})]},index);})})]}):/*#__PURE__*/_jsx(\"p\",{children:\"LOADING...\"})});}export default Table;","map":{"version":3,"names":["useContext","useFetch","FormContext","FilterContext","SortContext","Table","DATA","search","HandleFilterCases","SortBy","length","Object","keys","map","objKey","index","filter","planet","name","toLowerCase","includes","sort","a","b","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"sources":["/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/components/Table.js"],"sourcesContent":["import { useContext } from 'react';\nimport useFetch from '../hooks/useFetch';\nimport FormContext from '../context/formContext';\nimport FilterContext from '../context/filterContext';\nimport SortContext from '../context/sortContext';\n\nfunction Table() {\n  const { DATA } = useFetch();\n  const { search } = useContext(FormContext);\n  const { HandleFilterCases } = useContext(FilterContext);\n  const { SortBy } = useContext(SortContext);\n\n  return (\n    <div>\n      { DATA.length\n        ? (\n          <table>\n            <thead>\n              <tr>\n                { Object.keys(DATA[0]).map((objKey, index) => (\n                  <th\n                    key={ index }\n                  >\n                    {objKey}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              { DATA.filter((planet) => planet.name.toLowerCase().includes(search))\n                .filter(HandleFilterCases)\n                .sort((a, b) => SortBy(a, b))\n                .map((planet, index) => (\n                  <tr key={ index }>\n                    <td data-testid=\"planet-name\">{planet.name}</td>\n                    <td>{planet.rotation_period}</td>\n                    <td>{planet.orbital_period}</td>\n                    <td>{planet.diameter}</td>\n                    <td>{planet.climate}</td>\n                    <td>{planet.gravity}</td>\n                    <td>{planet.terrain}</td>\n                    <td>{planet.surface_water}</td>\n                    <td>{planet.population}</td>\n                    <td>{planet.films}</td>\n                    <td>{planet.created}</td>\n                    <td>{planet.edited}</td>\n                    <td>{planet.url}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        )\n        : (\n          <p>LOADING...</p>\n        )}\n    </div>\n  );\n}\n\nexport default Table;\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,MAAOC,SAAQ,KAAM,mBAAmB,CACxC,MAAOC,YAAW,KAAM,wBAAwB,CAChD,MAAOC,cAAa,KAAM,0BAA0B,CACpD,MAAOC,YAAW,KAAM,wBAAwB,CAAC,wFAEjD,QAASC,MAAK,EAAG,CACf,cAAiBJ,QAAQ,EAAE,CAAnBK,IAAI,WAAJA,IAAI,CACZ,gBAAmBN,UAAU,CAACE,WAAW,CAAC,CAAlCK,MAAM,aAANA,MAAM,CACd,iBAA8BP,UAAU,CAACG,aAAa,CAAC,CAA/CK,iBAAiB,cAAjBA,iBAAiB,CACzB,iBAAmBR,UAAU,CAACI,WAAW,CAAC,CAAlCK,MAAM,cAANA,MAAM,CAEd,mBACE,qBACIH,IAAI,CAACI,MAAM,cAET,sCACE,oCACE,oBACIC,MAAM,CAACC,IAAI,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC,CAACO,GAAG,CAAC,SAACC,MAAM,CAAEC,KAAK,qBACvC,oBAGGD,MAAM,EAFDC,KAAK,CAGR,EACN,CAAC,EACC,EACC,cACR,uBACIT,IAAI,CAACU,MAAM,CAAC,SAACC,MAAM,QAAKA,OAAM,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACb,MAAM,CAAC,GAAC,CAClES,MAAM,CAACR,iBAAiB,CAAC,CACzBa,IAAI,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKd,OAAM,CAACa,CAAC,CAAEC,CAAC,CAAC,GAAC,CAC5BV,GAAG,CAAC,SAACI,MAAM,CAAEF,KAAK,qBACjB,mCACE,WAAI,cAAY,aAAa,UAAEE,MAAM,CAACC,IAAI,EAAM,cAChD,oBAAKD,MAAM,CAACO,eAAe,EAAM,cACjC,oBAAKP,MAAM,CAACQ,cAAc,EAAM,cAChC,oBAAKR,MAAM,CAACS,QAAQ,EAAM,cAC1B,oBAAKT,MAAM,CAACU,OAAO,EAAM,cACzB,oBAAKV,MAAM,CAACW,OAAO,EAAM,cACzB,oBAAKX,MAAM,CAACY,OAAO,EAAM,cACzB,oBAAKZ,MAAM,CAACa,aAAa,EAAM,cAC/B,oBAAKb,MAAM,CAACc,UAAU,EAAM,cAC5B,oBAAKd,MAAM,CAACe,KAAK,EAAM,cACvB,oBAAKf,MAAM,CAACgB,OAAO,EAAM,cACzB,oBAAKhB,MAAM,CAACiB,MAAM,EAAM,cACxB,oBAAKjB,MAAM,CAACkB,GAAG,EAAM,GAbbpB,KAAK,CAcV,EACN,CAAC,EACE,GACF,cAGR,mBAAG,YAAU,EACd,EACC,CAEV,CAEA,cAAeV,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}