{"ast":null,"code":"var _jsxFileName = \"/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/components/Table.js\",\n  _s = $RefreshSig$();\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  const FETCH = useFetch();\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: FETCH.length && Object.keys(DATA[0]).map((objKey, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: objKey\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: FETCH.length && FETCH.map((planet, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.rotation_period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.orbital_period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.diameter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.climate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.gravity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.terrain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.surface_water\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.population\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.films\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.edited\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"Ov9HrOCMG+c+2jo7P16NZNu3HKg=\", false, function () {\n  return [useFetch];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useFetch","Table","FETCH","length","Object","keys","DATA","map","objKey","index","planet","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"sources":["/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/components/Table.js"],"sourcesContent":["import useFetch from '../hooks/useFetch';\n\nfunction Table() {\n  const FETCH = useFetch();\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          { FETCH.length\n          && (Object.keys(DATA[0]).map((objKey, index) => (\n            <th\n              key={ index }\n            >\n              {objKey}\n            </th>\n          )))}\n        </tr>\n      </thead>\n      <tbody>\n        { FETCH.length\n        && (\n          FETCH\n            .map((planet, index) => (\n              <tr key={ index }>\n                <td>{planet.name}</td>\n                <td>{planet.rotation_period}</td>\n                <td>{planet.orbital_period}</td>\n                <td>{planet.diameter}</td>\n                <td>{planet.climate}</td>\n                <td>{planet.gravity}</td>\n                <td>{planet.terrain}</td>\n                <td>{planet.surface_water}</td>\n                <td>{planet.population}</td>\n                <td>{planet.films}</td>\n                <td>{planet.created}</td>\n                <td>{planet.edited}</td>\n                <td>{planet.url}</td>\n              </tr>\n            ))\n        )}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,mBAAmB;AAAC;AAEzC,SAASC,KAAK,GAAG;EAAA;EACf,MAAMC,KAAK,GAAGF,QAAQ,EAAE;EAExB,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,UACIE,KAAK,CAACC,MAAM,IACVC,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzC;UAAA,UAGGD;QAAM,GAFDC,KAAK;UAAA;UAAA;UAAA;QAAA,QAId;MAAE;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA,QACC,eACR;MAAA,UACIP,KAAK,CAACC,MAAM,IAEZD,KAAK,CACFK,GAAG,CAAC,CAACG,MAAM,EAAED,KAAK,kBACjB;QAAA,wBACE;UAAA,UAAKC,MAAM,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACtB;UAAA,UAAKD,MAAM,CAACE;QAAe;UAAA;UAAA;UAAA;QAAA,QAAM,eACjC;UAAA,UAAKF,MAAM,CAACG;QAAc;UAAA;UAAA;UAAA;QAAA,QAAM,eAChC;UAAA,UAAKH,MAAM,CAACI;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM,eAC1B;UAAA,UAAKJ,MAAM,CAACK;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM,eACzB;UAAA,UAAKL,MAAM,CAACM;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM,eACzB;UAAA,UAAKN,MAAM,CAACO;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM,eACzB;UAAA,UAAKP,MAAM,CAACQ;QAAa;UAAA;UAAA;UAAA;QAAA,QAAM,eAC/B;UAAA,UAAKR,MAAM,CAACS;QAAU;UAAA;UAAA;UAAA;QAAA,QAAM,eAC5B;UAAA,UAAKT,MAAM,CAACU;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eACvB;UAAA,UAAKV,MAAM,CAACW;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM,eACzB;UAAA,UAAKX,MAAM,CAACY;QAAM;UAAA;UAAA;UAAA;QAAA,QAAM,eACxB;UAAA,UAAKZ,MAAM,CAACa;QAAG;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA,GAbbd,KAAK;QAAA;QAAA;QAAA;MAAA,QAehB;IACJ;MAAA;MAAA;MAAA;IAAA,QACK;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ;AAAC,GA1CQR,KAAK;EAAA,QACED,QAAQ;AAAA;AAAA,KADfC,KAAK;AA4Cd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}