{"ast":null,"code":"var _jsxFileName = \"/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/planetsProvider.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport PlanetsContext from './planetsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlanetsProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [planets, setPlanets] = useState([]);\n  const fetchData = async () => {\n    const response = await fetch('https://swapi.dev/api/planets');\n    const data = await response.json();\n    const planetsData = data.results;\n    setPlanets(planetsData);\n    console.log(planetsData);\n  };\n  return /*#__PURE__*/_jsxDEV(PlanetsContext.Provider, {\n    value: {\n      planets,\n      fetchData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(PlanetsProvider, \"Fr7quCiGNnFjDpsgRHxhgmmLogk=\");\n_c = PlanetsProvider;\nPlanetsProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};\nexport default PlanetsProvider;\nvar _c;\n$RefreshReg$(_c, \"PlanetsProvider\");","map":{"version":3,"names":["PropTypes","useState","PlanetsContext","PlanetsProvider","children","planets","setPlanets","fetchData","response","fetch","data","json","planetsData","results","console","log","propTypes","element","isRequired"],"sources":["/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/planetsProvider.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport PlanetsContext from './planetsContext';\n\nfunction PlanetsProvider({ children }) {\n  const [planets, setPlanets] = useState([]);\n\n  const fetchData = async () => {\n    const response = await fetch('https://swapi.dev/api/planets');\n    const data = await response.json();\n\n    const planetsData = data.results;\n    setPlanets(planetsData);\n    console.log(planetsData);\n  };\n\n  return (\n    <PlanetsContext.Provider value={ { planets, fetchData } }>\n      { children }\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default PlanetsProvider;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,SAASC,eAAe,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMM,SAAS,GAAG,YAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;IAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAElC,MAAMC,WAAW,GAAGF,IAAI,CAACG,OAAO;IAChCP,UAAU,CAACM,WAAW,CAAC;IACvBE,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAC1B,CAAC;EAED,oBACE,QAAC,cAAc,CAAC,QAAQ;IAAC,KAAK,EAAG;MAAEP,OAAO;MAAEE;IAAU,CAAG;IAAA,UACrDH;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAE9B;AAAC,GAjBQD,eAAe;AAAA,KAAfA,eAAe;AAmBxBA,eAAe,CAACa,SAAS,GAAG;EAC1BZ,QAAQ,EAAEJ,SAAS,CAACiB,OAAO,CAACC;AAC9B,CAAC;AAED,eAAef,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}