{"ast":null,"code":"var _jsxFileName = \"/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/filterProvider.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useContext, useState } from 'react';\nimport FilterContext from './filterContext';\nimport useInput from '../hooks/useInput';\nimport PlanetsContext from './planetsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const columnFilter = useInput('population');\n  const comparisonFilter = useInput('maior que');\n  const valueFilter = useInput(0);\n  const {\n    planets,\n    setPlanets\n  } = useContext(PlanetsContext);\n  const {\n    filteredPlanets,\n    setFilteredPlanets\n  } = useState();\n  const planetsFilterByName = planets.filter(planet => planet.name.toLowerCase().includes(search));\n  setFilteredPlanets(planetsFilterByName);\n  const handleFilter = () => {\n    const column = columnFilter.value;\n    const comparsion = comparisonFilter.value;\n    const valueInput = valueFilter.value;\n    const filterPlanets = planets.filter(planet => {\n      switch (comparsion) {\n        case 'maior que':\n          return planet[column] > valueInput;\n        case 'menor que':\n          return planet[column] < valueInput;\n        case 'igual a':\n          return planet[column] === valueInput;\n        default:\n          return planet;\n      }\n    });\n    setPlanets(filteredPlanets);\n  };\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: {\n      columnFilter,\n      comparisonFilter,\n      valueFilter,\n      handleFilter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterProvider, \"lrNnQDPr61apMcCnIgdlkNx91lM=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = FilterProvider;\nFilterProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};\nexport default FilterProvider;\nvar _c;\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"names":["PropTypes","useContext","useState","FilterContext","useInput","PlanetsContext","FilterProvider","children","columnFilter","comparisonFilter","valueFilter","planets","setPlanets","filteredPlanets","setFilteredPlanets","planetsFilterByName","filter","planet","name","toLowerCase","includes","search","handleFilter","column","value","comparsion","valueInput","filterPlanets","propTypes","element","isRequired"],"sources":["/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/filterProvider.js"],"sourcesContent":["// import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useContext, useState } from 'react';\nimport FilterContext from './filterContext';\nimport useInput from '../hooks/useInput';\nimport PlanetsContext from './planetsContext';\n\nfunction FilterProvider({ children }) {\n  const columnFilter = useInput('population');\n  const comparisonFilter = useInput('maior que');\n  const valueFilter = useInput(0);\n\n  const { planets, setPlanets } = useContext(PlanetsContext);\n  const { filteredPlanets, setFilteredPlanets } = useState();\n\n  const planetsFilterByName = planets\n    .filter((planet) => planet.name.toLowerCase().includes(search));\n\n  setFilteredPlanets(planetsFilterByName);\n\n  const handleFilter = () => {\n    const column = columnFilter.value;\n    const comparsion = comparisonFilter.value;\n    const valueInput = valueFilter.value;\n\n    const filterPlanets = planets\n      .filter((planet) => {\n        switch (comparsion) {\n        case 'maior que':\n          return (planet[column] > valueInput);\n        case 'menor que':\n          return (planet[column] < valueInput);\n        case 'igual a':\n          return (planet[column] === valueInput);\n        default:\n          return planet;\n        }\n      });\n\n    setPlanets(filteredPlanets);\n  };\n\n  return (\n    <FilterContext.Provider\n      value={\n        { columnFilter,\n          comparisonFilter,\n          valueFilter,\n          handleFilter }\n      }\n    >\n      { children }\n    </FilterContext.Provider>\n  );\n}\n\nFilterProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default FilterProvider;\n"],"mappings":";;AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,SAASC,cAAc,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAClC,MAAMC,YAAY,GAAGJ,QAAQ,CAAC,YAAY,CAAC;EAC3C,MAAMK,gBAAgB,GAAGL,QAAQ,CAAC,WAAW,CAAC;EAC9C,MAAMM,WAAW,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAE/B,MAAM;IAAEO,OAAO;IAAEC;EAAW,CAAC,GAAGX,UAAU,CAACI,cAAc,CAAC;EAC1D,MAAM;IAAEQ,eAAe;IAAEC;EAAmB,CAAC,GAAGZ,QAAQ,EAAE;EAE1D,MAAMa,mBAAmB,GAAGJ,OAAO,CAChCK,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAEjEP,kBAAkB,CAACC,mBAAmB,CAAC;EAEvC,MAAMO,YAAY,GAAG,MAAM;IACzB,MAAMC,MAAM,GAAGf,YAAY,CAACgB,KAAK;IACjC,MAAMC,UAAU,GAAGhB,gBAAgB,CAACe,KAAK;IACzC,MAAME,UAAU,GAAGhB,WAAW,CAACc,KAAK;IAEpC,MAAMG,aAAa,GAAGhB,OAAO,CAC1BK,MAAM,CAAEC,MAAM,IAAK;MAClB,QAAQQ,UAAU;QAClB,KAAK,WAAW;UACd,OAAQR,MAAM,CAACM,MAAM,CAAC,GAAGG,UAAU;QACrC,KAAK,WAAW;UACd,OAAQT,MAAM,CAACM,MAAM,CAAC,GAAGG,UAAU;QACrC,KAAK,SAAS;UACZ,OAAQT,MAAM,CAACM,MAAM,CAAC,KAAKG,UAAU;QACvC;UACE,OAAOT,MAAM;MAAC;IAElB,CAAC,CAAC;IAEJL,UAAU,CAACC,eAAe,CAAC;EAC7B,CAAC;EAED,oBACE,QAAC,aAAa,CAAC,QAAQ;IACrB,KAAK,EACH;MAAEL,YAAY;MACZC,gBAAgB;MAChBC,WAAW;MACXY;IAAa,CAChB;IAAA,UAECf;EAAQ;IAAA;IAAA;IAAA;EAAA,QACa;AAE7B;AAAC,GA/CQD,cAAc;EAAA,QACAF,QAAQ,EACJA,QAAQ,EACbA,QAAQ;AAAA;AAAA,KAHrBE,cAAc;AAiDvBA,cAAc,CAACsB,SAAS,GAAG;EACzBrB,QAAQ,EAAEP,SAAS,CAAC6B,OAAO,CAACC;AAC9B,CAAC;AAED,eAAexB,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}