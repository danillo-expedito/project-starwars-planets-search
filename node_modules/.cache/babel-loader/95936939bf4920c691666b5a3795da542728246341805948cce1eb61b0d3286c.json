{"ast":null,"code":"var _jsxFileName = \"/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/filterProvider.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport FilterContext from './filterContext';\nimport useInput from '../hooks/useInput';\nimport PlanetsContext from './planetsContext';\nimport FormContext from './formContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const columnFilter = useInput('population');\n  const comparisonFilter = useInput('maior que');\n  const valueFilter = useInput(0);\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  const {\n    search\n  } = useContext(FormContext);\n  const {\n    planets\n  } = useContext(PlanetsContext);\n  const handleNameFilter = () => {\n    const planetsFilterByName = planets.filter(planet => planet.name.toLowerCase().includes(search));\n    setFilteredPlanets(planetsFilterByName);\n  };\n\n  // const handleValueFilter = () => {\n  //   const column = columnFilter.value;\n  //   const comparsion = comparisonFilter.value;\n  //   const valueInput = valueFilter.value;\n\n  //   const filterPlanetsByNameNValue = planets\n  //     .filter((planet) => {\n  //       switch (comparsion) {\n  //       case 'maior que':\n  //         return (planet[column] > valueInput);\n  //       case 'menor que':\n  //         return (planet[column] < valueInput);\n  //       case 'igual a':\n  //         return (planet[column] === valueInput);\n  //       default:\n  //         return planet;\n  //       }\n  //     });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: {\n      columnFilter,\n      comparisonFilter,\n      valueFilter,\n      // handleFilter,\n      filteredPlanets,\n      handleNameFilter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterProvider, \"JujUs7TgEaRS5RqKGFb7iNfGccQ=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = FilterProvider;\nFilterProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};\nexport default FilterProvider;\nvar _c;\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"names":["PropTypes","useState","FilterContext","useInput","PlanetsContext","FormContext","FilterProvider","children","columnFilter","comparisonFilter","valueFilter","filteredPlanets","setFilteredPlanets","search","useContext","planets","handleNameFilter","planetsFilterByName","filter","planet","name","toLowerCase","includes","propTypes","element","isRequired"],"sources":["/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/filterProvider.js"],"sourcesContent":["// import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport FilterContext from './filterContext';\nimport useInput from '../hooks/useInput';\nimport PlanetsContext from './planetsContext';\nimport FormContext from './formContext';\n\nfunction FilterProvider({ children }) {\n  const columnFilter = useInput('population');\n  const comparisonFilter = useInput('maior que');\n  const valueFilter = useInput(0);\n\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  const { search } = useContext(FormContext);\n  const { planets } = useContext(PlanetsContext);\n\n  const handleNameFilter = () => {\n    const planetsFilterByName = planets\n      .filter((planet) => planet.name.toLowerCase().includes(search));\n\n    setFilteredPlanets(planetsFilterByName);\n  };\n\n  // const handleValueFilter = () => {\n  //   const column = columnFilter.value;\n  //   const comparsion = comparisonFilter.value;\n  //   const valueInput = valueFilter.value;\n\n  //   const filterPlanetsByNameNValue = planets\n  //     .filter((planet) => {\n  //       switch (comparsion) {\n  //       case 'maior que':\n  //         return (planet[column] > valueInput);\n  //       case 'menor que':\n  //         return (planet[column] < valueInput);\n  //       case 'igual a':\n  //         return (planet[column] === valueInput);\n  //       default:\n  //         return planet;\n  //       }\n  //     });\n  // };\n\n  return (\n    <FilterContext.Provider\n      value={\n        { columnFilter,\n          comparisonFilter,\n          valueFilter,\n          // handleFilter,\n          filteredPlanets,\n          handleNameFilter }\n      }\n    >\n      { children }\n    </FilterContext.Provider>\n  );\n}\n\nFilterProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default FilterProvider;\n"],"mappings":";;AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,SAASC,cAAc,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAClC,MAAMC,YAAY,GAAGL,QAAQ,CAAC,YAAY,CAAC;EAC3C,MAAMM,gBAAgB,GAAGN,QAAQ,CAAC,WAAW,CAAC;EAC9C,MAAMO,WAAW,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAE/B,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM;IAAEY;EAAO,CAAC,GAAGC,UAAU,CAACT,WAAW,CAAC;EAC1C,MAAM;IAAEU;EAAQ,CAAC,GAAGD,UAAU,CAACV,cAAc,CAAC;EAE9C,MAAMY,gBAAgB,GAAG,MAAM;IAC7B,MAAMC,mBAAmB,GAAGF,OAAO,CAChCG,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACT,MAAM,CAAC,CAAC;IAEjED,kBAAkB,CAACK,mBAAmB,CAAC;EACzC,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,aAAa,CAAC,QAAQ;IACrB,KAAK,EACH;MAAET,YAAY;MACZC,gBAAgB;MAChBC,WAAW;MACX;MACAC,eAAe;MACfK;IAAiB,CACpB;IAAA,UAECT;EAAQ;IAAA;IAAA;IAAA;EAAA,QACa;AAE7B;AAAC,GAlDQD,cAAc;EAAA,QACAH,QAAQ,EACJA,QAAQ,EACbA,QAAQ;AAAA;AAAA,KAHrBG,cAAc;AAoDvBA,cAAc,CAACiB,SAAS,GAAG;EACzBhB,QAAQ,EAAEP,SAAS,CAACwB,OAAO,CAACC;AAC9B,CAAC;AAED,eAAenB,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}