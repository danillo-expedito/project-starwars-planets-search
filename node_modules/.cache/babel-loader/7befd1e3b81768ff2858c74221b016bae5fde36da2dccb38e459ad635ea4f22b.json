{"ast":null,"code":"var _jsxFileName = \"/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/filterProvider.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport FilterContext from './filterContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [selected, setSelected] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0\n  });\n  const arrayOfOptions = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n  const [options, setOptions] = useState(arrayOfOptions);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const removeOption = op => {\n    const newOptions = options.filter(option => option !== op);\n    setOptions(newOptions);\n    setSelected({\n      column: options[0],\n      comparison: 'maior que',\n      value: 0\n    });\n  };\n  function HandleFilter(op) {\n    setActiveFilters([...activeFilters, selected]);\n    removeOption(op);\n  }\n  const removeFilters = filter => {\n    if (!filter) {\n      setActiveFilters([]);\n      setOptions(arrayOfOptions);\n    }\n  };\n  const handleFilterCases = planet => {\n    const conditions = [];\n    activeFilters.forEach(filter => {\n      switch (filter.comparison) {\n        case 'maior que':\n          conditions.push(Number(planet[filter.column]) > Number(filter.value));\n          break;\n        case 'menor que':\n          conditions.push(Number(planet[filter.column]) < Number(filter.value));\n          break;\n        case 'igual a':\n          conditions.push(Number(planet[filter.column]) === Number(filter.value));\n          break;\n        default:\n          return true;\n      }\n    });\n    return conditions.every(con => con);\n  };\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: {\n      selected,\n      setSelected,\n      activeFilters,\n      HandleFilter,\n      handleFilterCases,\n      options,\n      removeFilters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterProvider, \"VDxp5ThyZ3wvxh9BZiZhRc9HlUw=\");\n_c = FilterProvider;\nFilterProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};\nexport default FilterProvider;\nvar _c;\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"names":["PropTypes","useState","FilterContext","FilterProvider","children","selected","setSelected","column","comparison","value","arrayOfOptions","options","setOptions","activeFilters","setActiveFilters","removeOption","op","newOptions","filter","option","HandleFilter","removeFilters","handleFilterCases","planet","conditions","forEach","push","Number","every","con","propTypes","element","isRequired"],"sources":["/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/filterProvider.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport FilterContext from './filterContext';\n\nfunction FilterProvider({ children }) {\n  const [selected, setSelected] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0,\n  });\n\n  const arrayOfOptions = ['population', 'orbital_period',\n    'diameter', 'rotation_period', 'surface_water'];\n  const [options, setOptions] = useState(arrayOfOptions);\n\n  const [activeFilters, setActiveFilters] = useState([]);\n\n  const removeOption = (op) => {\n    const newOptions = options.filter((option) => option !== op);\n\n    setOptions(newOptions);\n    setSelected({\n      column: options[0],\n      comparison: 'maior que',\n      value: 0,\n    });\n  };\n\n  function HandleFilter(op) {\n    setActiveFilters([...activeFilters, selected]);\n\n    removeOption(op);\n  }\n\n  const removeFilters = (filter) => {\n    if (!filter) {\n      setActiveFilters([]);\n      setOptions(arrayOfOptions);\n    }\n  };\n\n  const handleFilterCases = (planet) => {\n    const conditions = [];\n\n    activeFilters.forEach((filter) => {\n      switch (filter.comparison) {\n      case 'maior que':\n        conditions.push(Number(planet[filter.column]) > Number(filter.value));\n        break;\n      case 'menor que':\n        conditions.push(Number(planet[filter.column]) < Number(filter.value));\n        break;\n      case 'igual a':\n        conditions.push(Number(planet[filter.column]) === Number(filter.value));\n        break;\n      default:\n        return true;\n      }\n    });\n\n    return conditions.every((con) => con);\n  };\n\n  return (\n    <FilterContext.Provider\n      value={\n        { selected,\n          setSelected,\n          activeFilters,\n          HandleFilter,\n          handleFilterCases,\n          options,\n          removeFilters }\n      }\n    >\n      { children }\n    </FilterContext.Provider>\n  );\n}\n\nFilterProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default FilterProvider;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,SAASC,cAAc,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC;IACvCM,MAAM,EAAE,YAAY;IACpBC,UAAU,EAAE,WAAW;IACvBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG,CAAC,YAAY,EAAE,gBAAgB,EACpD,UAAU,EAAE,iBAAiB,EAAE,eAAe,CAAC;EACjD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAACS,cAAc,CAAC;EAEtD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMc,YAAY,GAAIC,EAAE,IAAK;IAC3B,MAAMC,UAAU,GAAGN,OAAO,CAACO,MAAM,CAAEC,MAAM,IAAKA,MAAM,KAAKH,EAAE,CAAC;IAE5DJ,UAAU,CAACK,UAAU,CAAC;IACtBX,WAAW,CAAC;MACVC,MAAM,EAAEI,OAAO,CAAC,CAAC,CAAC;MAClBH,UAAU,EAAE,WAAW;MACvBC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED,SAASW,YAAY,CAACJ,EAAE,EAAE;IACxBF,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAER,QAAQ,CAAC,CAAC;IAE9CU,YAAY,CAACC,EAAE,CAAC;EAClB;EAEA,MAAMK,aAAa,GAAIH,MAAM,IAAK;IAChC,IAAI,CAACA,MAAM,EAAE;MACXJ,gBAAgB,CAAC,EAAE,CAAC;MACpBF,UAAU,CAACF,cAAc,CAAC;IAC5B;EACF,CAAC;EAED,MAAMY,iBAAiB,GAAIC,MAAM,IAAK;IACpC,MAAMC,UAAU,GAAG,EAAE;IAErBX,aAAa,CAACY,OAAO,CAAEP,MAAM,IAAK;MAChC,QAAQA,MAAM,CAACV,UAAU;QACzB,KAAK,WAAW;UACdgB,UAAU,CAACE,IAAI,CAACC,MAAM,CAACJ,MAAM,CAACL,MAAM,CAACX,MAAM,CAAC,CAAC,GAAGoB,MAAM,CAACT,MAAM,CAACT,KAAK,CAAC,CAAC;UACrE;QACF,KAAK,WAAW;UACde,UAAU,CAACE,IAAI,CAACC,MAAM,CAACJ,MAAM,CAACL,MAAM,CAACX,MAAM,CAAC,CAAC,GAAGoB,MAAM,CAACT,MAAM,CAACT,KAAK,CAAC,CAAC;UACrE;QACF,KAAK,SAAS;UACZe,UAAU,CAACE,IAAI,CAACC,MAAM,CAACJ,MAAM,CAACL,MAAM,CAACX,MAAM,CAAC,CAAC,KAAKoB,MAAM,CAACT,MAAM,CAACT,KAAK,CAAC,CAAC;UACvE;QACF;UACE,OAAO,IAAI;MAAC;IAEhB,CAAC,CAAC;IAEF,OAAOe,UAAU,CAACI,KAAK,CAAEC,GAAG,IAAKA,GAAG,CAAC;EACvC,CAAC;EAED,oBACE,QAAC,aAAa,CAAC,QAAQ;IACrB,KAAK,EACH;MAAExB,QAAQ;MACRC,WAAW;MACXO,aAAa;MACbO,YAAY;MACZE,iBAAiB;MACjBX,OAAO;MACPU;IAAc,CACjB;IAAA,UAECjB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACa;AAE7B;AAAC,GA1EQD,cAAc;AAAA,KAAdA,cAAc;AA4EvBA,cAAc,CAAC2B,SAAS,GAAG;EACzB1B,QAAQ,EAAEJ,SAAS,CAAC+B,OAAO,CAACC;AAC9B,CAAC;AAED,eAAe7B,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}