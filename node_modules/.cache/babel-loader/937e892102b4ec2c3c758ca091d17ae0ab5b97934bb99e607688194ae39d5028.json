{"ast":null,"code":"var _jsxFileName = \"/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/filterProvider.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport FilterContext from './filterContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [selected, setSelected] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0\n  });\n  const [activeFilters, setActiveFilters] = useState([]);\n  const handleFilter = () => {\n    setActiveFilters([...activeFilters, selected]);\n    setSelected({\n      column: '',\n      comparison: '',\n      value: 0\n    });\n  };\n  const handleFilterCases = planet => {\n    const conditions = [];\n    activeFilters.forEach(filter => {\n      switch (filter.comparison) {\n        case 'maior que':\n          conditions.push(+planet[filter.column] > +filter.value);\n          break;\n        case 'menor que':\n          conditions.push(+planet[filter.column] < +filter.value);\n          break;\n        case 'igual a':\n          conditions.push(+planet[filter.column] === +filter.value);\n          break;\n        default:\n          return true;\n      }\n    });\n    return conditions.every(con => con);\n  };\n  const handleFilterOptions = option => !activeFilters.find(filter => option === filter.column);\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: {\n      selected,\n      setSelected,\n      activeFilters,\n      handleFilter,\n      handleFilterCases,\n      handleFilterOptions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterProvider, \"1AmfaXHuoAlwhyS+RwHkgrJF2gg=\");\n_c = FilterProvider;\nFilterProvider.propTypes = {\n  children: PropTypes.element.isRequired\n};\nexport default FilterProvider;\nvar _c;\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"names":["PropTypes","useState","FilterContext","FilterProvider","children","selected","setSelected","column","comparison","value","activeFilters","setActiveFilters","handleFilter","handleFilterCases","planet","conditions","forEach","filter","push","every","con","handleFilterOptions","option","find","propTypes","element","isRequired"],"sources":["/home/dante/projetos-trybe/sd-030-b-project-starwars-planets-search/src/context/filterProvider.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport FilterContext from './filterContext';\n\nfunction FilterProvider({ children }) {\n  const [selected, setSelected] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0,\n  });\n\n  const [activeFilters, setActiveFilters] = useState([]);\n\n  const handleFilter = () => {\n    setActiveFilters([...activeFilters, selected]);\n    setSelected({\n      column: '',\n      comparison: '',\n      value: 0,\n    });\n  };\n\n  const handleFilterCases = (planet) => {\n    const conditions = [];\n\n    activeFilters.forEach((filter) => {\n      switch (filter.comparison) {\n      case 'maior que':\n        conditions.push((+planet[filter.column]) > (+filter.value));\n        break;\n      case 'menor que':\n        conditions.push((+planet[filter.column]) < (+filter.value));\n        break;\n      case 'igual a':\n        conditions.push((+planet[filter.column]) === (+filter.value));\n        break;\n      default:\n        return true;\n      }\n    });\n\n    return conditions.every((con) => con);\n  };\n\n  const handleFilterOptions = (option) => !activeFilters\n    .find((filter) => option === filter.column);\n\n  return (\n    <FilterContext.Provider\n      value={\n        { selected,\n          setSelected,\n          activeFilters,\n          handleFilter,\n          handleFilterCases,\n          handleFilterOptions }\n      }\n    >\n      { children }\n    </FilterContext.Provider>\n  );\n}\n\nFilterProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default FilterProvider;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,SAASC,cAAc,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC;IACvCM,MAAM,EAAE,YAAY;IACpBC,UAAU,EAAE,WAAW;IACvBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,YAAY,GAAG,MAAM;IACzBD,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEL,QAAQ,CAAC,CAAC;IAC9CC,WAAW,CAAC;MACVC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,iBAAiB,GAAIC,MAAM,IAAK;IACpC,MAAMC,UAAU,GAAG,EAAE;IAErBL,aAAa,CAACM,OAAO,CAAEC,MAAM,IAAK;MAChC,QAAQA,MAAM,CAACT,UAAU;QACzB,KAAK,WAAW;UACdO,UAAU,CAACG,IAAI,CAAE,CAACJ,MAAM,CAACG,MAAM,CAACV,MAAM,CAAC,GAAK,CAACU,MAAM,CAACR,KAAM,CAAC;UAC3D;QACF,KAAK,WAAW;UACdM,UAAU,CAACG,IAAI,CAAE,CAACJ,MAAM,CAACG,MAAM,CAACV,MAAM,CAAC,GAAK,CAACU,MAAM,CAACR,KAAM,CAAC;UAC3D;QACF,KAAK,SAAS;UACZM,UAAU,CAACG,IAAI,CAAE,CAACJ,MAAM,CAACG,MAAM,CAACV,MAAM,CAAC,KAAO,CAACU,MAAM,CAACR,KAAM,CAAC;UAC7D;QACF;UACE,OAAO,IAAI;MAAC;IAEhB,CAAC,CAAC;IAEF,OAAOM,UAAU,CAACI,KAAK,CAAEC,GAAG,IAAKA,GAAG,CAAC;EACvC,CAAC;EAED,MAAMC,mBAAmB,GAAIC,MAAM,IAAK,CAACZ,aAAa,CACnDa,IAAI,CAAEN,MAAM,IAAKK,MAAM,KAAKL,MAAM,CAACV,MAAM,CAAC;EAE7C,oBACE,QAAC,aAAa,CAAC,QAAQ;IACrB,KAAK,EACH;MAAEF,QAAQ;MACRC,WAAW;MACXI,aAAa;MACbE,YAAY;MACZC,iBAAiB;MACjBQ;IAAoB,CACvB;IAAA,UAECjB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACa;AAE7B;AAAC,GAzDQD,cAAc;AAAA,KAAdA,cAAc;AA2DvBA,cAAc,CAACqB,SAAS,GAAG;EACzBpB,QAAQ,EAAEJ,SAAS,CAACyB,OAAO,CAACC;AAC9B,CAAC;AAED,eAAevB,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}